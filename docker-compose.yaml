version: "3.8"

services:
  frontend:
    image: prithuanan/ic-devops-batch3-docker-assignment-1-frontend:latest
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"

  backend:
    image: prithuanan/ic-devops-batch3-docker-assignment-1-backend:latest
    ports:
      - "5000:5000"
    restart: on-failure
    secrets:
      - db_password
    environment:
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_HOST: ${DB_HOST:?Environment variable DB_HOST is not set. Please configure in the .env file.}
      DB_USER: ${DB_USER:?Environment variable DB_USER is not set. Please configure in the .env file.}
      DB_NAME: ${DB_NAME:?Environment variable DB_NAME is not set. Please configure in the .env file.}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    networks:
      - app_network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?Environment variable POSTGRES_USER is not set. Please configure in the .env file.}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Environment variable POSTGRES_PASSWORD is not set. Please configure in the .env file.}
      POSTGRES_DB: ${DB_NAME:?Environment variable DB_NAME is not set. Please configure in the .env file.}
    secrets:
      - db_password
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    networks:
      - app_network

secrets:
  db_password:
    file: ./secrets/db_password

volumes:
  db_data:

networks:
  app_network:
    driver: bridge
